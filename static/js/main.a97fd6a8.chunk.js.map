{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","className","name","onClick","bind","Link","to","style","cursor","float","color","marginRight","email","phone","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","console","log","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","NotFound","Test","title","body","fetch","then","response","json","App","Context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a97fd6a8.chunk.js","sourcesContent":["// Context API || Global State\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  // Evaluate action type that gets called\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        // Filters out the ID which is sent thru the payload\n        // ... means.. gather the remaining parameteres into an array\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        // return an object and initial state\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\n// This file now holds our Application State\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  // Refactor, neater syntax\n  // Adding async/await to axios\n  // assign a variable to the response and the do what we want\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({\n      contacts: res.data\n    });\n  }\n\n  // componentDidMount() {\n  //   axios\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(res => this.setState({ contacts: res.data }));\n  // }\n\n  // This Provider gives off a Value holding the State\n  // value can take pieces of state, but we passed the entire State\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n\n// axios.get('https://jsonplaceholder.typicode.com/users').then(res =>\n//       this.setState({\n//         contacts: res.data.map(i => {\n//           return {\n//             id: i.id,\n//             name: i.name,\n//             address: `${i.address.suite} ${i.address.street}`,\n//             email: i.email\n//           };\n//         })\n//       })\n//     );\n","// rcc Class Based Component\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../Context\";\nimport axios from \"axios\";\nimport \"./../css/contact.css\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  // Custom Methods should use arrow functions for 'this'\n  // eliminates the need to bind or run constructors\n  onShowClick = e => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  // onDeleteClick = (id, dispatch) => {\n  //   // Delete request to fake rest api\n  //   axios\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n  //     .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n  // };\n\n  render() {\n    // DESTRUCTURING\n    const { contact } = this.props;\n    // const { id } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          // DESTRUCTURE\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {/* {this.onshowClick} BECAUSE IT'S A METHOD INSIDE THIS CLASS */}\n                {/* you can bind additional parameters to the function  */}\n                {/* this.onShowClick.bind(this, name, etc..) */}\n                {contact.name}{\" \"}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"showBtn fas fa-sort-down\"\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\n                  className=\"deleteBtn fas fa-times\"\n                />\n                <Link to={`contact/edit/${this.props.contact.id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {contact.email}</li>\n                  <li className=\"list-group-item\">Phone: {contact.phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\n// Proptypes\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","// rcc Class Component\nimport React, { Component } from \"react\";\nimport Contact from \"./Contact\";\n// Any component we want to use the Context 'state' with we bring in the Consumer\nimport { Consumer } from \"../../Context\";\n\nclass Contacts extends Component {\n  // Return the Consumer tag with the Value passed early, which was the entire State\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          // DESTRUCTURING\n          // PUlled out Contacts from the Context state\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {/* contact is getting passed as props to Contact.js */}\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","// rfc Functional Component\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n// CSS\nimport \"./../css/header.css\";\n\nconst Header = props => {\n  // DESTRUCTURING\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\">Home</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\">Add</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\">About</i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// Default Props\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\n// Proptypes\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  // Destructure\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  // Updates state for form values\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  // Form Submit func\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    console.log(this.state);\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      // id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    // Post request to fake rest api\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // Redirect\n    this.props.history.push(\"/\");\n  };\n\n  // Next create an action, that goes to the context reducer, 'like delete', and then add it to the state\n\n  render() {\n    // Destructuring\n    // so we don't have to call value={this.state.name}..\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          // Destructure\n          // Now we have access to dispatch, which allows us to call an action, call Add Contact\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    // if anything is in errors.name it will get passed here\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    // get the id\n    // get id from parameter this.props.match.params\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    // response data\n    const contact = res.data;\n\n    // set the state\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  // Updates state for form values\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  // Form Submit func\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    console.log(this.state);\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    // create update object\n    // this comes from state above ^^ comes from form\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n\n    // Put request\n    // get id from url\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    // Redirect\n    this.props.history.push(\"/\");\n  };\n\n  // Next create an action, that goes to the context reducer, 'like delete', and then add it to the state\n\n  render() {\n    // Destructuring\n    // so we don't have to call value={this.state.name}..\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          // Destructure\n          // Now we have access to dispatch, which allows us to call an action, call Add Contact\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Update Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    // if anything is in errors.name it will get passed here\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  //   componentWillMount() {\n  //     console.log(\"componentWillMount...\");\n  //     // UNSAFE_\n  //   }\n\n  //   componentDidUpdate() {\n  //     console.log(\"componentDidUpdate...\");\n  //   }\n\n  //   componentWillUpdate() {\n  //     console.log(\"componentWillUpdate...\");\n  //     // UNSAFE_\n  //   }\n\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     console.log(\"WillReceiveProps\");\n  //     // UNSAFE_\n  //   }\n\n  //   static getDerivedStateFromProps(nextProps, prevState) {\n  //     // return state or return null\n  //     return null;\n  //   }\n\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\n  //     console.log(\"manipulate things as we need\");\n  //   }\n\n  render() {\n    // Destructure\n    const { title, body } = this.state;\n\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n\n// ComponentDidMount\n// whatever is placed in function fires once it's mounted\n// HTTP calls to an api or backend\n\n// ComponentWillMount\n// runs before anything mounts\n\n// ComponentDidUpdate\n// only runs when component updates\n// changing state, etc..\n\n// ComponentWIllReceiveProps\n// when component recieves props then this runs\n// used with redux\n// application level state\n// turn this piece of state into a component prop\n\n// READ\n// https://reactjs.org/docs/state-and-lifecycle.htmlS\n// https://medium.com/@baphemot/understanding-react-react-16-3-component-life-cycle-23129bc7a705\n","import React, { Component } from \"react\";\n// changed browserrouter to hashrouter for deploy\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n// COMPONENTS\nimport Contacts from \"./components//contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n// Imported our Provider State\nimport { Provider } from \"./Context\";\n// CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      // Wrapped the entire application in the Provider State so we can access\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route match=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}